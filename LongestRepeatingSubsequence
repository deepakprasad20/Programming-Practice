/*
* This programme is used to find longest repeating subsequence from a given string:
* eg: "AABEBCDD"
* OUTPUT: "ABD" as ABD is repeating in this string and order is same for both.
* so output for this will be the length of ABD i.e, 3.
* */
public class LongestRepeatingSubsequence {
    public static void main(String[] args){
        String s = "CAABEBCD";
        System.out.println("Length of Longest repeating subsequence is: " + lcs(s,s,s.length(),s.length()));
    }

    private static int lcs(String a, String b, int m, int n) {
        int[][] t = new int[m+1][n+1];
        for(int i = 0 ; i < m+1 ; i++){
            for(int j = 0 ; j < n+1 ; j++){
               if(i == 0 || j == 0){
                   t[i][j] = 0;
               }
            }
        }
        for(int i = 1 ; i < m+1 ; i++){
            for(int j = 1 ; j < n+1 ; j++){
                if(a.charAt(i-1) == b.charAt(j-1) && i != j){
                    t[i][j] = t[i-1][j-1]+1;
                }
                else{
                    t[i][j] = Math.max(t[i-1][j],t[i][j-1]);
                }
            }
        }
        return t[m][n];
    }
}
