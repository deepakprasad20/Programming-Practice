/*
* This programme is used to find minimum number of coins
* required from an array to get a given sum
* */
public class CoinChange2 {
    public static void main(String[] args){
        int[] coin = {3};
        int sum = 5;
        System.out.println("Minimum number of coins required to get sum as " + sum + " is : " +
                 findMinimumNumberofCoinRequiredToAGivenSum(coin , sum));
    }

    private static int findMinimumNumberofCoinRequiredToAGivenSum(int[] coin, int sum) {
        int n = coin.length;
        int[][] t = new int[n+1][sum+1];
        for(int i = 0 ; i < n+1 ; i++){
            for(int j = 0 ; j < sum+1 ; j++){
                if(j == 0){
                    t[i][j] =0;
                }
                if(i == 0){
                    t[i][j] = Integer.MAX_VALUE - 1;
                }
            }
        }

        //Initializing 2nd row for i == 1;
        for(int j = 1 ; j < sum+1 ; j++){
            if(j%coin[0] == 0){
                t[1][j] = j/coin[0];
            } else{
                t[1][j] = Integer.MAX_VALUE -1;
            }
        }

        for(int i = 2 ; i < n+1 ; i++){
            for(int j = 1 ; j < sum+1 ; j++){
                if(coin[i-1] <= j){
                    t[i][j] = Math.min(t[i-1][j] , 1+t[i][j-coin[i-1]]);
                }
                else{
                    t[i][j] = t[i-1][j];
                }
            }
        }
        return t[n][sum] == Integer.MAX_VALUE-1 ?  0 : t[n][sum];
    }
}
