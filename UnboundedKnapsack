public class UnboundedKnapsack {

    public  static void main(String[] args){
        int[] val = {5, 4, 4, 10};
        int[] weight = {1, 3, 4, 7};
        int W = 10;
        System.out.println("Maximum profit : " + knapsack(val , weight , W , weight.length));
    }

    private static int knapsack(int[] val, int[] weight, int w, int n) {
        int[][] grid = new int[n+1][w+1];
        for(int i = 0 ; i < n+1 ; i++){
            for(int j = 0 ; j < w+1 ; j++){
                if(i == 0 || j == 0){
                    grid[i][j] = 0;
                }
            }
        }

        for(int i = 1 ; i < n+1 ; i++){
            for(int j = 1 ; j < w+1 ; j++){
                if(weight[i-1] <= j){
                    grid[i][j] = Math.max(val[i-1]+grid[i][j-weight[i-1]] , grid[i-1][j]);
                }
                else{
                    grid[i][j] = grid[i-1][j];
                }
            }
        }
        return grid[n][w];
    }
}
